### Techniques Used
1. **Method Overloading**: Implemented multiple `add` methods in the `Calculator` class for different parameter types (int, float, double), demonstrating polymorphism.
2. **Input Validation**: Used `Scanner` and its `hasNextInt()`, `nextInt()`, `nextDouble()`, and `nextFloat()` methods to ensure that user inputs are valid before performing calculations.
3. **Control Flow**: Utilized conditional statements (`if-else`) to determine which operation to perform based on user input, enhancing the program's interactivity.
4. **Resource Management**: Closed the `Scanner` object at the end of the program to prevent resource leaks, adhering to best practices in resource management.

### Strengths
1. **User-Friendly Interface**:  Clear prompts and instructions guide the user through the input process, making it easy to understand and use.
2. **Robust Input Handling**:  The program effectively handles invalid inputs, ensuring that users cannot proceed without providing valid data, which increases the program's reliability.
3. **Extensibility**: The design allows for easy addition of more methods (e.g., subtraction, multiplication) in the `Calculator` class without affecting existing functionality.
4. **Polymorphism**: Demonstrates the concept of polymorphism through method overloading, making the code more flexible and easier to maintain.

Code:

import java.util.Scanner;

class InnerHelloWorld {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        System.out.println("Enter 1 to calculate two integers, 2 to calculate two doubles, and 3 to calculate two floats:");
        int option;
        
        // Validate input for option selection
        while (!sc.hasNextInt()) {
            System.out.println("Please enter a valid integer");
            sc.next();  // Discard invalid input
        }
        option = sc.nextInt();

        Calculator calc = new Calculator(); // Create Calculator instance
        
        // Perform calculations based on user's choice
        if (option == 1) {
            System.out.println("Enter the two integers: ");
            int num1 = sc.nextInt();
            int num2 = sc.nextInt();
            System.out.println("The sum of these two integers is " + calc.add(num1, num2));
        } else if (option == 2) {
            System.out.println("Enter the two doubles: ");
            double num1 = sc.nextDouble();
            double num2 = sc.nextDouble();
            System.out.println("The sum of these two doubles is " + calc.add(num1, num2));
        } else if (option == 3) {
            System.out.println("Enter the two floats: ");
            float num1 = sc.nextFloat();
            float num2 = sc.nextFloat();
            System.out.println("The sum of these two floats is " + calc.add(num1, num2));
        } else {
            System.out.println("Invalid option selected. Please restart the program and choose a valid option.");
        }

        sc.close(); // Close the scanner to free resources
    }
}

// Calculator class
class Calculator {
    public int add(int a, int b) { return a + b; }
    public float add(float a, float b) { return a + b; }
    public double add(double a, double b) { return a + b; }
}
